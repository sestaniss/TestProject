This keyword refers to the current class/object/instance

this can be used to access current class instance variables and methods

this() -> used with constructor to call current class constructor

Inheritance:
    What is it? process when subclass acquires properties and behavior from super class

    Why to use it? for code re-usability, readability, eliminate code redundancy
How to implement? -> using extends keyword
    class parent{
    }
    class Child extends parent{
    }
Inheritance Types:
    Single - 1 child 1 parent
    Multilevel-> grandparent->parent->child
    hierarchical- 1 parent multiple children
Can a child class have multiple PARENTS? - Multiple Inheritance
    using class concept - NO

Access Modifiers:
4 Types
from less restrictive to the most
Public -> protected -> default -> private

Private members (Variables and methods) DO NOT PARTICIPATE in the inheritance

Variables SYNTAX

    OPTIONAL          OPTIONAL        MUST     MUST
access modifiers  nonAccess modifier   dataType name;



Methods Syntax

   OPTIONAL           OPTIONAL              MUST    MUST
access modifiers   nonAccess modifier    returnType name(){}

super keyword - used to refer to the immediate parent class

can be used with variables and methods
can be used with constructors

Flower flower1 = new Flower();

new -> creates an Object
Flower(); -> initializes the object (calling a constructor)

flower1 - is a variable (a.k.a. reference variable)
Flower -> Type

        String str=new String();
         str="Hello";

         String str1=new String("Hello");